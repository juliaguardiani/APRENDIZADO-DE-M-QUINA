# -*- coding: utf-8 -*-
"""Prática01, Redução de Casos - Júlia Neves Guardiani.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vCwBVByE2nT7pFRHZKVYDC9BbVmqBt7l

Link da base de dados:https://www.dropbox.com/sh/fhkqy2wybxjl0n5/AACRKtYslv7y4VmrgAAd0y2ma/csv?dl=0&preview=Adult.csv&subfolder_nav_tracking=1

**Importações a serem feitas:**
"""

from google.colab import files
import io
import pandas as pd
import matplotlib.pyplot as plt

"""**Upload da base de dados:**"""

# lendo arquivo csv
uploaded = files.upload()
dados = pd.read_csv(io.BytesIO(uploaded['Adult.csv']))

"""**Imprimindo as características (número de instâncias e atributos)**"""

print('\n1. Caracteristicas dos atributos: ')
print(dados.info())
print('\n2. Média dos atributos: ')
print(dados.mean())
print('\n3. Médiano dos atributos: ')
print(dados.median)

"""**Amostragem simples sem reposição:**

"""

# Amostragem simples de 30%, 50% e 70% sem reposição; 
amostra30 = dados.sample(frac = .30)
amostra50 = dados.sample(frac = .50)
amostra70 = dados.sample(frac = .70)
# salvando em csv
amostra30.to_csv('adult_30.csv',encoding='utf-8',index=False)
amostra50.to_csv('adult_50.csv',encoding='utf-8',index=False)
amostra70.to_csv('adult_70.csv',encoding='utf-8',index=False)
# Download do arquivo transformado
files.download('adult_30.csv')
files.download('adult_50.csv')
files.download('adult_70.csv')

"""**Amostragem simples com reposição:**

"""

# Gerando aleatoriamente 30%, 50% e 70% de instâncias com reposição
amostrareplace30 = dados.sample(frac = .30, replace = True)
amostrareplace50 = dados.sample(frac = .50, replace = True)
amostrareplace70 = dados.sample(frac = .70, replace = True)
# salvando em csv
amostrareplace30.to_csv('adult_30.csv',encoding='utf-8',index=False)
amostrareplace50.to_csv('adult_50.csv',encoding='utf-8',index=False)
amostrareplace70.to_csv('adult_70.csv',encoding='utf-8',index=False)
# Download do arquivo transformado
files.download('adult_30.csv')
files.download('adult_50.csv')
files.download('adult_70.csv')

"""**Amostragem estratificada:**"""

tamanho_amostra = 100
classes = dados['class'].unique()
qtde_por_classe = round(tamanho_amostra / len(classes))

amostras_por_classe = []
for c in classes:
 selecao_da_classe_atual = dados.loc[dados['class'] == c]
 amostra_c = selecao_da_classe_atual.sample(n = qtde_por_classe)
 amostras_por_classe.append(amostra_c)
amostra_estratificada = pd.concat(amostras_por_classe)
# salvando em csv
amostra_estratificada.to_csv('wine_estratify.csv', encoding='utf8',index=False)
# Download do arquivo transformado
files.download('wine_estratify.csv')
print(amostra_estratificada.info())
dataframe = pd.read_csv('wine_estratify.csv')